plotdat <- mammal_weather %>%
dplyr::rename(Temperature = mean_temp_anomaly,
Precipitation = mean_precip_anomaly) %>%
pivot_longer(cols = c(Temperature, Precipitation),
names_to = "weather_var", values_to = "anomaly") %>%
dplyr::select(ID_block, Binomial, year, longevity, litter, bodymass,
weather_var, anomaly) %>%
# life-history data bins of 0.2 units
mutate(litter_bin = litter - (litter %% 0.2),
longevity_bin = longevity - (longevity %% 0.2),
bodymass_bin = bodymass - (bodymass %% 0.2))
# longevity
ggplot(plotdat, aes(x = longevity_bin,
group = interaction(longevity_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_violin() +
facet_wrap(~weather_var)
# longevity
ggplot(plotdat, aes(x = longevity_bin,
group = interaction(longevity_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_violin() +
facet_wrap(~weather_var) +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F)
# longevity
ggplot(plotdat, aes(x = longevity_bin,
group = interaction(longevity_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised longevity (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var) +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
ggplot(plotdat, aes(x = litter_bin,
group = interaction(litter_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised litter size (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var) +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
ggplot(plotdat, aes(x = litter_bin,
group = interaction(litter_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised litter size (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
ggplot(plotdat, aes(x = longevity_bin,
group = interaction(longevity_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised longevity (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
ggplot(plotdat, aes(x = bodymass_bin,
group = interaction(bodymass_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised bodymass (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
##############################################################
##                                                          ##
##          Global climate and population dynamics          ##
##                                                          ##
## Range of weather anomalies across life-history variables ##
##                                                          ##
##                      Mar 2nd 2021                        ##
##                                                          ##
##############################################################
## Exploration to see whether there is a good range of raw weather
## anomalies associated with life-history traits.
rm(list = ls())
options(width = 100)
library(tidyverse)
library(viridis)
library(cowplot)
library(flextable)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 1. Load and merge data ####
# mammal raw data
load("../rawdata/mammal.RData")
glimpse(mammal)
# weather
mam_chelsa_annual <- readRDS("data/mam_chelsa_annual.RDS") %>%
filter(scale == "scale_5km") %>%
dplyr::select(ID,year, weather_scale = scale, mean_temp_anomaly, mean_precip_anomaly)
glimpse(mam_chelsa_annual)
# life-history data
load("data/lifehistory.RData", verbose = TRUE)
# species names to merge
load("../rawdata/GBIF_species_names_mamUPDATE.RData", verbose = TRUE)
# linking to weather data and species names
mammal_weather <- mammal %>%
left_join(., y = mam_chelsa_annual, by = c("ID", "year")) %>%
left_join(., y = dplyr::select(lpd_gbif, Binomial, gbif.species.id),
by = "Binomial") %>%
left_join(x = ., y = dplyr::select(lifehistory, c(3,6:9)),
by = "gbif.species.id") %>%
mutate(year_s = as.numeric(scale(year))) %>%
drop_na(litter, longevity, bodymass)
glimpse(mammal_weather)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 2. Explore anomaly range per life-history variable ####
temp_colour <- "#990a80"
precip_colour <- "#287f79"
summary(mammal_weather$longevity)
plotdat <- mammal_weather %>%
dplyr::rename(Temperature = mean_temp_anomaly,
Precipitation = mean_precip_anomaly) %>%
pivot_longer(cols = c(Temperature, Precipitation),
names_to = "weather_var", values_to = "anomaly") %>%
dplyr::select(ID_block, Binomial, year, longevity, litter, bodymass,
weather_var, anomaly) %>%
# life-history data bins of 0.2 units
mutate(litter_bin = litter - (litter %% 0.2),
longevity_bin = longevity - (longevity %% 0.2),
bodymass_bin = bodymass - (bodymass %% 0.2))
# longevity
longplot <- ggplot(plotdat, aes(x = longevity_bin,
group = interaction(longevity_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised longevity (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
# litter
litplot <- ggplot(plotdat, aes(x = litter_bin,
group = interaction(litter_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised litter size (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
# bodymass
bodplot <- ggplot(plotdat, aes(x = bodymass_bin,
group = interaction(bodymass_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised bodymass (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
longplot / litplot / bodplot
longplot + litplot + bodplot
library(patchwork)
longplot / litplot / bodplot
##############################################################
##                                                          ##
##          Global climate and population dynamics          ##
##                                                          ##
## Range of weather anomalies across life-history variables ##
##                                                          ##
##                      Mar 2nd 2021                        ##
##                                                          ##
##############################################################
## Exploration to see whether there is a good range of raw weather
## anomalies associated with life-history traits.
rm(list = ls())
options(width = 100)
library(tidyverse)
library(viridis)
library(patchwork)
library(flextable)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 1. Load and merge data ####
# mammal raw data
load("../rawdata/mammal.RData")
glimpse(mammal)
# weather
mam_chelsa_annual <- readRDS("data/mam_chelsa_annual.RDS") %>%
filter(scale == "scale_5km") %>%
dplyr::select(ID,year, weather_scale = scale, mean_temp_anomaly, mean_precip_anomaly)
glimpse(mam_chelsa_annual)
# life-history data
load("data/lifehistory.RData", verbose = TRUE)
# species names to merge
load("../rawdata/GBIF_species_names_mamUPDATE.RData", verbose = TRUE)
# linking to weather data and species names
mammal_weather <- mammal %>%
left_join(., y = mam_chelsa_annual, by = c("ID", "year")) %>%
left_join(., y = dplyr::select(lpd_gbif, Binomial, gbif.species.id),
by = "Binomial") %>%
left_join(x = ., y = dplyr::select(lifehistory, c(3,6:9)),
by = "gbif.species.id") %>%
mutate(year_s = as.numeric(scale(year))) %>%
drop_na(litter, longevity, bodymass)
glimpse(mammal_weather)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 2. Explore anomaly range per life-history variable ####
temp_colour <- "#990a80"
precip_colour <- "#287f79"
summary(mammal_weather$longevity)
plotdat <- mammal_weather %>%
dplyr::rename(Temperature = mean_temp_anomaly,
Precipitation = mean_precip_anomaly) %>%
pivot_longer(cols = c(Temperature, Precipitation),
names_to = "weather_var", values_to = "anomaly") %>%
dplyr::select(ID_block, Binomial, year, longevity, litter, bodymass,
weather_var, anomaly) %>%
# life-history data bins of 0.2 units
mutate(litter_bin = litter - (litter %% 0.2),
longevity_bin = longevity - (longevity %% 0.2),
bodymass_bin = bodymass - (bodymass %% 0.2))
# longevity
longplot <- ggplot(plotdat, aes(x = longevity_bin,
group = interaction(longevity_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised longevity (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
# litter
litplot <- ggplot(plotdat, aes(x = litter_bin,
group = interaction(litter_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised litter size (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
# bodymass
bodplot <- ggplot(plotdat, aes(x = bodymass_bin,
group = interaction(bodymass_bin, weather_var),
y = anomaly, fill = weather_var)) +
geom_hline(yintercept = 0) +
geom_violin() +
scale_fill_manual(values = c(precip_colour, temp_colour), guide = F) +
labs(x = "Standardised bodymass (binned in 0.2 increments)",
y = "Mean weather anomaly") +
facet_wrap(~weather_var, scales = "free") +
theme_bw(base_size = 13) +
theme(panel.grid = element_blank(),
strip.background = element_blank())
longplot / litplot / bodplot
ggsave(longplot / litplot / bodplot,
filename = "plots/weather_pop_growth/raw_anomaly_life_history_check.jpeg",
width = 15, height = 18, units = "cm",dpi =500)
##############################################################
##                                                          ##
##          Global climate and population dynamics          ##
##                                                          ##
##         Spatially autocorrelated meta-regression         ##
##                     Precipitation                        ##
##                                                          ##
##                      Mar 3rd 2021                        ##
##                                                          ##
##############################################################
## Using a nearest neighbours spatial weighting to fit a spatially autocorrelated
## meta-regression model on the GAM weather coefficients.
rm(list = ls())
options(width = 100)
# general
library(tidyverse)
library(viridis)
library(cowplot)
library(flextable)
# spatial
library(sf)
library(spdep)
# bayesian
library(brms)
library(tidybayes)
library(ggdist)
library(ggridges)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 1. Load data ####
load("data/mammal_analysis_data_GAM.RData", verbose = TRUE)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 2. Nearest neighbours spatial weights matrix for analysis ####
# specify the coordinates of the data
coordinates(mam_coef) <- ~ Longitude + Latitude
# return k nearest neighbours for each coordinate point
knea <- knearneigh(coordinates(mam_coef), longlat = TRUE)
# convert to a neighbours list
neighbours <- knn2nb(knea)
# Spatial weighting matrix
Wmat <- nb2mat(neighbours, style = "W")
mam_coef$coef_precip
##############################################################
##                                                          ##
##          Global climate and population dynamics          ##
##                                                          ##
##         Spatially autocorrelated meta-regression         ##
##                     Precipitation                        ##
##                                                          ##
##                      Mar 3rd 2021                        ##
##                                                          ##
##############################################################
## Using a nearest neighbours spatial weighting to fit a spatially autocorrelated
## meta-regression model on the GAM weather coefficients.
rm(list = ls())
options(width = 100)
# general
library(tidyverse)
library(viridis)
library(cowplot)
library(flextable)
# spatial
library(sf)
library(spdep)
# bayesian
library(brms)
library(tidybayes)
library(ggdist)
library(ggridges)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 1. Load data ####
load("data/mammal_analysis_data_GAM.RData", verbose = TRUE)
mam_coef <- drop_na(mam_coef, coef_precip)
##############################################################
##                                                          ##
##          Global climate and population dynamics          ##
##                                                          ##
##         Spatially autocorrelated meta-regression         ##
##                     Precipitation                        ##
##                                                          ##
##                      Mar 3rd 2021                        ##
##                                                          ##
##############################################################
## Using a nearest neighbours spatial weighting to fit a spatially autocorrelated
## meta-regression model on the GAM weather coefficients.
rm(list = ls())
options(width = 100)
# general
library(tidyverse)
library(viridis)
library(cowplot)
library(flextable)
# spatial
library(sf)
library(spdep)
# bayesian
library(brms)
library(tidybayes)
library(ggdist)
library(ggridges)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 1. Load data ####
load("data/mammal_analysis_data_GAM.RData", verbose = TRUE)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 2. Nearest neighbours spatial weights matrix for analysis ####
mam_coef <- drop_na(mam_coef, coef_precip)
# specify the coordinates of the data
coordinates(mam_coef) <- ~ Longitude + Latitude
# return k nearest neighbours for each coordinate point
knea <- knearneigh(coordinates(mam_coef), longlat = TRUE)
# convert to a neighbours list
neighbours <- knn2nb(knea)
# Spatial weighting matrix
Wmat <- nb2mat(neighbours, style = "W")
##############################################################
##                                                          ##
##          Global climate and population dynamics          ##
##                                                          ##
##         Spatially autocorrelated meta-regression         ##
##                     Precipitation                        ##
##                                                          ##
##                      Mar 3rd 2021                        ##
##                                                          ##
##############################################################
## Using a nearest neighbours spatial weighting to fit a spatially autocorrelated
## meta-regression model on the GAM weather coefficients.
rm(list = ls())
options(width = 100)
# general
library(tidyverse)
library(viridis)
library(cowplot)
library(flextable)
# spatial
library(sf)
library(spdep)
# bayesian
library(brms)
library(tidybayes)
library(ggdist)
library(ggridges)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 1. Load data ####
load("data/mammal_analysis_data_GAM.RData", verbose = TRUE)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 2. Nearest neighbours spatial weights matrix for analysis ####
mam_coef <- drop_na(mam_coef, coef_precip)
# specify the coordinates of the data
coordinates(mam_coef) <- ~ Longitude + Latitude
# return k nearest neighbours for each coordinate point
knea <- knearneigh(coordinates(mam_coef), longlat = TRUE)
# convert to a neighbours list
neighbours <- knn2nb(knea)
# Spatial weighting matrix
Wmat <- nb2mat(neighbours, style = "W")
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 3. Precipitation model ####
## Base model
set.seed(666)
precip_base <- brm(
coef_precip ~ 1 + sample_size + biome + (1| species),
data = mam_coef, family = gaussian(),
prior = c( # lagsar gets a flat prior bound between 0 and 1
prior(normal(0, 0.3), class =  Intercept),
prior(normal(0, 0.3), class = b, coef = "sample_size"),
prior(exponential(8), class = sd, group = "species")),
control = list(adapt_delta = 0.97,
max_treedepth = 15),
chains = 3, cores = 3, iter = 4000, warmup = 2000
)
## spatial model
set.seed(666)
precip_sp <- brm(
coef_precip ~ 1 + sample_size + biome + sar(Wmat, type = "lag") + (1| species),
data = mam_coef, family = gaussian(),
data2 = list(Wmat = Wmat),
prior = c( # lagsar gets a flat prior bound between 0 and 1
prior(normal(0, 0.3), class =  Intercept),
prior(normal(0, 0.3), class = b, coef = "sample_size"),
prior(exponential(8), class = sd, group = "species")),
control = list(adapt_delta = 0.97,
max_treedepth = 15),
chains = 3, cores = 3, iter = 4000, warmup = 2000
)
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 4. Model comparisons ####
## Model comparisons
precip_base <- add_criterion(precip_base, criterion = c("loo","waic"))
precip_sp <- add_criterion(precip_sp, criterion = c("loo","waic"))
mod_comp_precip <- as.data.frame(loo_compare(precip_base, precip_sp, criterion = "loo"))
mod_comp_precip
precip_sp
##____________________________________________________________________________________________________________________________________________________________________________________________________________
#### 5. Posterior plots for spatial ####
precip_colour <- "#287f79"
precip_sp %>%
gather_draws(`lagsar|sd.*|b_Intercept|b_sample_size|sigma`, regex = TRUE) %>% #tidybayes
ungroup() %>%
mutate(spatial = if_else(.variable == "lagsar", "yes", "no")) %>%
ggplot(aes(y = .variable, x = .value, fill = spatial)) +
stat_halfeye(show.legend = FALSE) +
geom_vline(xintercept = 0, size = 0.8) +
scale_fill_manual(values = c("grey", precip_colour)) +
scale_x_continuous(breaks = seq(-0.75,0.75,by = 0.25)) +
scale_y_discrete(labels = c(expression(paste("Global intercept ", bar(alpha))),
expression(paste("Sample size ", beta[N])),
"Spatial autocorrelation (SAR)",
expression(paste("Species level variance ", sigma[SPECIES])),
"Population-level variance")) +
labs(x = "Posterior estimate", y = NULL) +
theme_ridges(center_axis_labels = TRUE, grid = T, line_size = 0.3) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12)) +
ggsave("plots/meta_regression/spatial_autocorrelation_posterior_precip.jpeg",
width = 15, height = 14, units = "cm", dpi = 500)
## model comparisons plot
mod_comp_precip %>%
mutate(model = c("Base model", "Spatial autocorrelation (SAR)")) %>%
dplyr::select(model, elpd_loo, se_elpd_loo, elpd_diff, se_diff, looic) %>%
flextable(cwidth = 1.2) %>%
set_header_labels(model = "Model",
elpd_loo = "LOO elpd",
se_elpd_loo = "LOO elpd error",
elpd_diff = "elpd difference",
se_diff = "elpd error difference",
looic = "LOO information criterion") %>%
colformat_num(digits = 2) %>%
save_as_image("plots/meta_regression/spatial_autocorrelation_model_comparison_precip.png")
load("../../LPI_rawdata/lpd.RData")
lpd
glimpse(lpd)
